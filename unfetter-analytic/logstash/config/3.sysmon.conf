input {
    tcp {
        port => 3515
        type => 'sysmon'
        codec => json
    }
}

filter {


  
  if [type] == "sysmon" {

    # Rename Win Event Log specific items
    translate {
          field => "SeverityValue"
          destination => "[data_model][fields][severity]"
          override => "true"
          fallback => "unknown"
          dictionary => [
          "1","Debug",
          "2","Information",
          "3","Warning",
          "4","Error",
          "5","Critical"
           ]
    }


    mutate {
      rename => {
        "Channel" => "[data_model][fields][log_name]"
        "[Provider][Name]" => "[data_model][fields][log_type]"
        "Computer" => "[data_model][fields][fqdn]"
        "RecordNumber" => "[data_model][fields][record_number]"
        "Keywords" => "[data_model][fields][keywords]"
        "Hostname" => "[data_model][fields][hostname]"
        "EventID" => "[data_model][fields][event_code]"
        "Category" => "[data_model][action]"
      }
      add_field => {
        "[sensor][source_host]"=>"%{[data_model][fields][hostname]}"
      }


    }
 
    translate {
      field => "Task"
      destination => "[data_model][object]"
      override => "true"
      fallback => "unknown"
      dictionary => [
        "1","process",
        "2","file",
        "3","flow",
        "4","sysmon",
        "5","process",
        "6","driver",
        "7","module",
        "8","thread",
        "9","raw_access",
        "10","process",
        "255","error"
      ]
    }

    translate {
      field => "Task"
      destination => "[data_model][action]"
      override => "true"
      fallback => "unknown"
      dictionary => [
        "1","create",
        "2","attr_modify",
        "3","start",
        "4","change",
        "5","stop",
        "6","load",
        "7","load",
        "8","create",
        "9","read",
        "10","read",
        "255","error"
      ]
    }
    translate {
      field => "Task"
      destination => "[type]"
      override => "true"
      fallback => "unknown"
      dictionary => [
        "1","sysmon_process",
        "2","sysmon_file",
        "3","sysmon_flow",
        "4","sysmon_sysmon",
        "5","sysmon_process",
        "6","sysmon_driver",
        "7","sysmon_module",
        "8","sysmon_thread",
        "9","sysmon_raw_access",
        "10","sysmon_process_access",
        "255","error"
      ]
    }

    if [type] == "sysmon_process"
    {
    
    grok{
      
      match => {"Message"=>"(.)ProcessId: %{NUMBER:[data_model][fields][pid]}"}


    }}

    mutate { 
      add_tag => ["sysmoncheck"] 
      add_field => {
        "[sensor][name]"=>"sysmon"
        "received_at"=>"%{@timestamp}"
      }
      rename => {
        "EventTime" => "[data_model][fields][utc_time]"
        "Image" => "[data_model][fields][image_path]"
        "ProcessID" => "[data_model][fields][pid]"
        "CommandLine" => "[data_model][fields][command_line]"
        "Hashes" => "[data_model][fields][hashes]"
        "UserID" => "[data_model][fields][uuid]"
        "ProcessGuid" => "[data_model][fields][process_guid]"
        "LogonId" => "[data_model][fields][logon_id]"
        "LogonGuid" => "[data_model][fields][logon_guid]"
        "TerminalSessionId" => "[data_model][fields][terminal_session_id]"
        "IntegrityLevel" => "[data_model][fields][integrity_level]"
        "ParentProcessGuid" => "[data_model][fields][parent_process_guid]"
        "ParentProcessId" => "[data_model][fields][ppid]"
        "ParentImage" => "[data_model][fields][parent_image_path]"
        "ParentCommandLine" => "[data_model][fields][terminal_session_id]"
        "User" => "[data_model][fields][user]"
        "TargetFilename" => "[data_model][fields][file_name]"
        "CreationUtcTime" => "[data_model][fields][creation_time]"
        "PreviousCreationUtcTime" => "[data_model][fields][previous_creation_time"
        "Device" => "[data_model][fields][device]"
        "ImageLoaded" => "[data_model][fields][image_loaded]"
        "Signature" => "[data_model][fields][signature]"
        "Signed" => "[data_model][fields][signed]"
        "SourceProcessId" => "[data_model][fields][src_pid]"
        "SourceImage" => "[data_model][fields][source_image_path]"
        "ThreadID" => "[data_model][fields][src_tid]"
        "StartAddress" => "[data_model][fields][start_address]"
        "StartFunction" => "[data_model][fields][start_function]"
        "StartModule" => "[data_model][fields][start_module_name]"
        "TargetProcessId" => "[data_model][fields][target_pid]"
        "TargetProcessGuid" => "[data_model][fields][target_guid]"
        "AccountName" => "[account][account_name]"
        "AccountType" => "[account][account_type]"
        "host" => "[account][ip]"
        "Hostname" => "[account][hostname]"
        "Domain" => "[account][domain]"
      }
    }
# Depending upon which hashes are being generated, modify this. Default is all hash types:
    grok {
      match => {"[data_model][fields][hashes]" => "SHA1=%{BASE16NUM:[data_model][fields][sha1_hash]},MD5=%{BASE16NUM:[data_model][fields][md5_hash]},SHA256=%{BASE16NUM:[data_model][fields][hash][sha256_hash]},IMPHASH=%{BASE16NUM:[data_model][fields][imphash_hash]}"}
    }
  }
 
 
  if ([data_model][fields][image_path]) {
      ruby {code => "event['[data_model][fields][exe]'] = File.basename(event['[data_model][fields][image_path]'])"} 
  }
  if ([data_model][fields][parent_image_path]) {
      ruby {code => "event['[data_model][fields][parent_exe]'] = File.basename(event['[data_model][fields][parent_image_path]'])"} 
  }


}

